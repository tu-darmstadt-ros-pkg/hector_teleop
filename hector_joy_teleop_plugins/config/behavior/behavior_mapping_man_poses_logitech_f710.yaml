# for unknown mappings of [joystick axes or buttons] to [array index]: "sudo jstest /dev/input/jsX" (X is often 0) and then test each axis/button on gamepad

# order needs to be same as in joy message!

# WARNING: when using LT/RT the code probably needs to be adapted, since LT/RT axes are from [-1.0,1.0] with 1.0 as default value
#  (or use mapTriggerAxes(msg) to map it to [0,1] with 0.0 as default)

# NOTES:
# 1. In oder to split an axis into two partial axes or buttons write the two names seperated with a semicolon (and no spaces!).
#     The first one belongs to the part < 0, the second one to the part > 0 (e.g. "<nameA>_inc;<nameB>_inc")
# 2. In order to combine two (partial) axes or buttons into one axis use the suffixes <name>_inc and <name>_dec (e.g. front_inc and front_dec)
#
# WARNING: For all axes (except the trigger) are the maximal values: left: +1.0, right: -1.0, up: +1.0, down: -1.0
# Hence, when splitting a left/right axis, the first value is on the RIGHT part, the second on the LEFT part of axis.


## If an axis is used for two behaviors list both of them in one string, separated with a semicolon, e.g. "Behavior 1;Behavior 2"
##    The first is the one which will be executed for value -1 (when left/right axis: right), the second for +1 (when left/right axis: left).
axes:
  - ""  # 0: left joystick: left/right
  - ""  # 1: left joystick: up/down
  - ""  # 2: LT
  - ""  # 3: right joystick: left/right
  - ""  # 4: right joystick: up/down
  - ""  # 5: RT
  - "Move asterix arm to folded position;Unpack asterix arm from folded position"  # 6: cross: left/right
  - "Move asterix arm to manipulation position;Move asterix arm to manipulation position"  # 7: cross: up/down


buttons:
  - ""  # 0: A
  - ""  # 1: B
  - ""  # 2: X
  - ""  # 3: Y
  - ""  # 4: LB
  - ""  # 5: RB
  - ""  # 6: back
  - ""  # 7: start
  - ""  # 8: logitech
  - ""  # 9: left joystick press
  - ""  # 10:right joystick press
